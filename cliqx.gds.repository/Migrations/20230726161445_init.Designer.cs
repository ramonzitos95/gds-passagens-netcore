// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cliqx.gds.repository.Contexts;

#nullable disable

namespace cliqx.gds.repository.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20230726161445_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("cliqx.gds.contract.Models.CoinType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("InternalProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUpdatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("CoinType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("d4f838ca-996b-409b-b007-e31c7c481884"),
                            InternalProperty = true,
                            IsActive = true,
                            Label = "R$",
                            Name = "Real",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("cec1c86e-b34e-4306-addd-03c116fdd50a"),
                            InternalProperty = true,
                            IsActive = true,
                            Label = "US$",
                            Name = "Dólar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("ea012d2e-1325-4c9c-a019-ed528400df14"),
                            InternalProperty = true,
                            IsActive = true,
                            Label = "€",
                            Name = "Euro",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataUltimoLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Departamento")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.UserForgetCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ForgetCode")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserForgetCodes");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.PaymentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiBaseUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CredentialsJsonObject")
                        .HasMaxLength(8192)
                        .HasColumnType("varchar(8192)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("InternalProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUpdatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("PaymentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiBaseUrl = "{\"UrlBaseTreeal\":\"https://bank-api-production-dot-snog-382317.ue.r.appspot.com/api/v1/bank\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"TokenTreeal\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiU25vZyIsImVudiI6InByb2QiLCJpZCI6ImU1ZWRmNzM2LTY2NjQtNGRiYi1iYTA0LTI5ZDY4NDFmZDBmZCJ9.OscGPowi60QeGSjdPX-09mIhqQ4EPxdEE4GN0jjGrNU\",\"PixKeyTreeal\":\"ce276502-0206-4b9c-abfe-57e9db60f01e\",\"ExpirationSecondsTreeal\":600,\"UrlReturnTreeal\":\"https://np33nn2ki5.execute-api.us-east-2.amazonaws.com/v1/webhook/treeal\"}",
                            ExternalId = new Guid("f2f6921f-470b-442e-957f-80d61a0b951f"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "DefaultPay",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ApiBaseUrl = "{\"UrlBase\":\"https://checkout.cliqx.com.br\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"Token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiU25vZyIsImVudiI6InByb2QiLCJpZCI6ImU1ZWRmNzM2LTY2NjQtNGRiYi1iYTA0LTI5ZDY4NDFmZDBmZCJ9.OscGPowi60QeGSjdPX-09mIhqQ4EPxdEE4GN0jjGrNU\",\"PixKey\":\"ce276502-0206-4b9c-abfe-57e9db60f01e\",\"ExpirationSeconds\":600,\"UrlReturn\":\"https://np33nn2ki5.execute-api.us-east-2.amazonaws.com/v1/webhook/treeal\",\"CartaoJuros\":0.0299,\"MaxParcelas\":\"3\",\"CartaoExpiracaoLink\":\"\",\"PixExpiracaoLink\":\"\"}",
                            ExternalId = new Guid("feed115c-0ca8-4607-bec1-a9b91a8f2f55"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "FacilitaPay",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.Plugin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36) COLLATE ascii_general_ci");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("InternalProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUpdatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("Plugin");

                    b.HasData(
                        new
                        {
                            Id = "bcdf6d22-2823-478c-b44f-5fecb733b022",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("b8717116-882d-48b7-b5da-5dbfdf596dd7"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "RjConsultores",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "4434b7e9-942d-4fb0-bd4b-09e3a4408a41",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("24f6d213-f507-4b60-ac4b-ecb63fa0f670"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "Distribusion",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "1c7c73b5-a694-4426-b751-baa165b79ed1",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("798f43ed-098d-4bc8-aa34-fff94fdeae12"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "ClickBus",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "8ecb43ae-7e34-4789-a6a3-1f3ea3884be5",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("d99224d9-6746-4351-baa2-914b44c5f245"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "Rodosoft",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "09a5347d-2eeb-4a6a-a5b8-dea9e9525b16",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("cc13905e-b063-4496-a968-bab49a310adb"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "Smartbus",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.PluginConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36) COLLATE ascii_general_ci");

                    b.Property<string>("ApiBaseUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CredentialsJsonObject")
                        .HasMaxLength(8192)
                        .HasColumnType("varchar(8192)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ExtraData")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<bool>("InternalProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Options")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PaymentServiceId")
                        .HasColumnType("int");

                    b.Property<string>("PluginId")
                        .IsRequired()
                        .HasColumnType("varchar(36) COLLATE ascii_general_ci");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionLocator")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TransactionName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUpdatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentServiceId");

                    b.HasIndex("PluginId");

                    b.HasIndex("ShoppingCartId");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("PluginConfiguration");

                    b.HasData(
                        new
                        {
                            Id = "b420bf9b-068a-41f7-b726-dcc32898f399",
                            ApiBaseUrl = "{\"BaseUrl\":\"http://3.141.251.80\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"Authorization\":\"Basic c25vZzpzbm9n\",\"TenantId\":\"e9ef81ac-1fd0-40a2-84c0-df077dc46e4b\",\"RecargaPlusUser\":\"omshub-api\",\"RecargaPlusPassword\":\"999999\",\"RecargaPlusStore\":\"23\"}",
                            Description = "",
                            ExternalId = new Guid("428a921d-2c0b-4846-a246-11f9a413c6a0"),
                            InternalProperty = false,
                            IsActive = true,
                            PaymentServiceId = 2,
                            PluginId = "bcdf6d22-2823-478c-b44f-5fecb733b022",
                            ShoppingCartId = 1,
                            StoreId = 1L,
                            TransactionLocator = "RJ_LOCALIZADOR",
                            TransactionName = "RJ_TRANSACAO",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "9e4d313b-7041-43d1-9f22-87bc72c188a5",
                            ApiBaseUrl = "{\"BaseUrl\":\"https://api.distribusion.com\",\"RecargaPlusUrl\":\"https://app.snog.com.br/recarga-plus\",\"DistribusionEtlUrl\":\"http://localhost:20231\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"ApiKey\":\"o6tLyEqo12zLetXXyZ0eM2kKr2C1abrfe3jhO74j\",\"RecargaPlusStore\":\"1\",\"RetailerPartnerNumber\":\"609180\",\"SmtpPassword\":\"eyAasdas123\"}",
                            Description = "Distribusion",
                            ExternalId = new Guid("326daf04-db35-4485-8a18-6478e2be522e"),
                            InternalProperty = false,
                            IsActive = true,
                            PaymentServiceId = 2,
                            PluginId = "4434b7e9-942d-4fb0-bd4b-09e3a4408a41",
                            ShoppingCartId = 1,
                            StoreId = 1L,
                            TransactionLocator = "DISTRIBUSION_LOCALIZADOR",
                            TransactionName = "DISTRIBUSION_TRANSACAO",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "a3c2b595-d552-4e83-b538-365c09f62063",
                            ApiBaseUrl = "{\"BaseUrl\":\"http://rjconsultores:2023/api\",\"UrlClickBus\":\"http://localhost:2023/api\",\"BaseUrlRecargaPlus\":\"http://recargaplus:2023/api\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"apiKey\":\"eyAasdas123\"}",
                            Description = "",
                            ExternalId = new Guid("4ac98bb8-ffbf-446b-b285-fe3727ed1166"),
                            InternalProperty = false,
                            IsActive = true,
                            PaymentServiceId = 2,
                            PluginId = "1c7c73b5-a694-4426-b751-baa165b79ed1",
                            ShoppingCartId = 1,
                            StoreId = 1L,
                            TransactionLocator = "CLICKBUS_LOCALIZADOR",
                            TransactionName = "CLICKBUS_TRANSACAO",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "39bd4c85-68a7-4c74-a8d5-bd90c21837f6",
                            ApiBaseUrl = "{\"BaseUrl\":\"http://rjconsultores:2023/api\",\"UrlRodosoft\":\"http://localhost:2023/api\",\"BaseUrlRecargaPlus\":\"http://recargaplus:2023/api\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"apiKey\":\"eyAasdas123\"}",
                            Description = "",
                            ExternalId = new Guid("49237d22-b05a-4d47-a596-598dfae13d56"),
                            InternalProperty = false,
                            IsActive = true,
                            PaymentServiceId = 2,
                            PluginId = "8ecb43ae-7e34-4789-a6a3-1f3ea3884be5",
                            ShoppingCartId = 1,
                            StoreId = 1L,
                            TransactionLocator = "RODOSOFT_LOCALIZADOR",
                            TransactionName = "RODOSOFT_TRANSACAO",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "f74146f1-9c82-4581-b2e8-ef75de6b7e14",
                            ApiBaseUrl = "{\"BaseUrl\":\"https://prod-andorinha-gateway-smartbus.oreons.com/J3/clickbus\",\"UrlAuth\":\"http://prod-andorinha-gateway-smartbus.oreons.com:58677/OAuth\",\"UrlEtl\":\"https://app.snog.com.br/smartbus\"}",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CredentialsJsonObject = "{\"userName\":\"SNOG\",\"password\":\"SN@cc90Pxd\"}",
                            Description = "Smartbus Plugin",
                            ExternalId = new Guid("e3f92adb-83c9-4772-9f49-a75a7913ccc5"),
                            ExtraData = "{\"contrato\":\"MMS2021\"}",
                            InternalProperty = false,
                            IsActive = true,
                            PaymentServiceId = 2,
                            PluginId = "09a5347d-2eeb-4a6a-a5b8-dea9e9525b16",
                            ShoppingCartId = 1,
                            StoreId = 1L,
                            TransactionLocator = "SMARTBUS_LOCALIZADOR",
                            TransactionName = "SMARTBUS_TRANSACAO",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiBaseUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CredentialsJsonObject")
                        .HasMaxLength(8192)
                        .HasColumnType("varchar(8192)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("InternalProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUpdatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("ShoppingCartServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExternalId = new Guid("fcae4400-4309-44fd-89c9-beaeaf100223"),
                            InternalProperty = false,
                            IsActive = true,
                            Name = "RecargaPlus",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.UserPlugin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("PluginConfigurationsId")
                        .IsRequired()
                        .HasColumnType("varchar(36) COLLATE ascii_general_ci");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PluginConfigurationsId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersPlugins");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.CoinType", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");

                    b.Navigation("UserCreated");

                    b.Navigation("UserUpdated");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.UserRole", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.Identity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.PaymentService", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");

                    b.Navigation("UserCreated");

                    b.Navigation("UserUpdated");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.Plugin", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");

                    b.Navigation("UserCreated");

                    b.Navigation("UserUpdated");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.PluginConfiguration", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.PluginConfigurations.PaymentService", "PaymentService")
                        .WithMany()
                        .HasForeignKey("PaymentServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cliqx.gds.contract.Models.PluginConfigurations.Plugin", "Plugin")
                        .WithMany()
                        .HasForeignKey("PluginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cliqx.gds.contract.Models.PluginConfigurations.ShoppingCart", "ShoppingCart")
                        .WithMany()
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");

                    b.Navigation("PaymentService");

                    b.Navigation("Plugin");

                    b.Navigation("ShoppingCart");

                    b.Navigation("UserCreated");

                    b.Navigation("UserUpdated");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.ShoppingCart", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");

                    b.Navigation("UserCreated");

                    b.Navigation("UserUpdated");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.UserPlugin", b =>
                {
                    b.HasOne("cliqx.gds.contract.Models.PluginConfigurations.PluginConfiguration", "PluginConfigurations")
                        .WithMany("UsersPlugins")
                        .HasForeignKey("PluginConfigurationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cliqx.gds.contract.Models.Identity.User", "User")
                        .WithMany("UsersPlugins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PluginConfigurations");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.Identity.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UsersPlugins");
                });

            modelBuilder.Entity("cliqx.gds.contract.Models.PluginConfigurations.PluginConfiguration", b =>
                {
                    b.Navigation("UsersPlugins");
                });
#pragma warning restore 612, 618
        }
    }
}
